trigger:
- master

jobs:
- job: 'Test'
  pool:
    vmImage: 'macOS-10.14'
  strategy:
    matrix:
      py27:
        python.version: '2.7'
        onnx_ml: 0
      py36:
        python.version: '3.6'
        onnx_ml: 0
      py36-onnx-ml:
        python.version: '3.6'
        onnx_ml: 1
    maxParallel: 3

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'

  - script: |
      git submodule update --init --recursive
      python -m pip install --upgrade setuptools
      python -m pip install numpy
      conda install -y -c conda-forge pybind11 protobuf
      brew update
      brew install protobuf
      export DEBUG=${onnx_debug}
      export ONNX_ML=${onnx_ml}
      export CMAKE_ARGS="-DONNX_USE_LITE_PROTO=ON -DONNXIFI_DUMMY_BACKEND=ON"
      export ONNX_NAMESPACE=ONNX_NAMESPACE_FOO_BAR_FOR_CI
      python setup.py --quiet install
    displayName: 'Install dependencies and ONNX'

  - script: |
      # lint python code
      pip install --quiet flake8
      flake8
      if [ $? -ne 0 ]; then
        echo "flake8 returned failures"
        exit 1
      fi

      # Do not hardcode onnx's namespace in the c++ source code, so that
      # other libraries who statically link with onnx can hide onnx symbols
      # in a private namespace.
      ! grep -R --include='*.cc' --include='*.h' 'namespace onnx' .
      ! grep -R --include='*.cc' --include='*.h' 'onnx::' .

      # onnx python api tests
      if [ "$(python.version)" == "2.7" ]; then
        pip install --quiet pytest nbval
      else
        # pytest 6.0 made deprecation warnings fail by default, pinning pytest to 5.4.3.
        # TODO replace deprecated function with the suggested one. https://docs.pytest.org/en/stable/deprecations.html#id5
        pip install --quiet pytest==5.4.3 nbval
      fi

      pytest onnxoptimizer
      if [ $? -ne 0 ]; then
        echo "pytest failed"
        exit 1
      fi

    displayName: 'Run ONNX Optimizer Tests'
